name: Release

on:
  push:
    tags: ["v*"]

env:
  BIN: my-binary-name # <-- set your binary name here

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            --draft \
            --verify-tag \
            --title "${{ github.ref_name }}"

  build:
    needs: ["create-release"]
    strategy:
      fail-fast: false
      matrix:
        include:
          - host: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            label: linux-x86_64

          - host: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc
            label: windows-x86_64

          - host: macos
            os: macos-latest
            target: x86_64-apple-darwin
            label: macos-x86_64

          - host: macos
            os: macos-latest
            target: aarch64-apple-darwin
            label: macos-aarch64

    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build Release
        run: cargo build --release --locked --verbose --target ${{ matrix.target }}

      - name: Generate Artifact Name
        shell: bash
        run: |
          echo "ARTIFACT_NAME=${BIN}-${GITHUB_REF_NAME#v}-${{ matrix.label }}.zip" >> "$GITHUB_ENV"

      - name: Create Archive
        shell: bash
        run: |
          mkdir staging
          if [ "${{ matrix.host }}" = "windows" ]; then
            cp "target/${{ matrix.target }}/release/${BIN}.exe" staging/
            cd staging
            7z a "../${ARTIFACT_NAME}" *
          else
            cp "target/${{ matrix.target }}/release/${BIN}" staging/
            cd staging
            zip "../${ARTIFACT_NAME}" *
          fi

      - name: Upload to Release
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${GITHUB_REF_NAME}" "${ARTIFACT_NAME}"
